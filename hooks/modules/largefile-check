#!/bin/bash

# Allow large files if GIT_ALLOW_LARGE_FILES is set
if [ "$GIT_ALLOW_LARGE_FILES" != "1" ]; then
  echo -e "${YELLOW}Checking for large files...${NO_COLOR}"
  LARGE_FILES_FOUND=0

  # Loop through staged files
  for file in $(git diff --cached --name-only); do
    if [ -f "$file" ]; then
      FILE_SIZE=$(du -k "$file" | cut -f1) # Get file size in kilobytes
      if [ "$FILE_SIZE" -gt "$MAX_FILE_SIZE" ]; then
        echo -e "${RED}Error: File '${file}' exceeds the ${MAX_FILE_SIZE}KB size limit.${NO_COLOR}"
        LARGE_FILES_FOUND=1
      fi
    fi
  done

  if [ "$LARGE_FILES_FOUND" -eq 1 ]; then
    echo -e "${YELLOW}Please remove or reduce the size of large files before committing.${NO_COLOR}"
    echo -e "${YELLOW}You can unstage a large file using:${NO_COLOR}"
    echo -e "${GREEN}git reset HEAD <file>${NO_COLOR}"
    echo -e "${YELLOW}If you really want to commit large files, run:${NO_COLOR}"
    echo -e "${GREEN}GIT_ALLOW_LARGE_FILES=1 git commit -m '<Commit msg>'${NO_COLOR}"
    # Increase the file size limit
    echo -e "${YELLOW}You can increase the file size limit by running:${NO_COLOR}"
    echo -e "${GREEN}git config git-hooks.maxfilesize <new_size>${NO_COLOR} or ${GREEN}export GIT_MAX_FILE_SIZE=<new_size>${NO_COLOR}"
    exit 1
  fi
fi
